standardized ratings -> Only usefull if applying cosine/spearman (linear)
ratings -> can easily be used to determine spearman/kendall (ranking)

normalized similarities (makes the matching step more logical (max weight with non-negative weights))

library		algorithm			notes

scipy		kendalltau			Used to compute non-linear (ranked) similarity between users
scipy		pearsonr			Used to compute linear similarity between users
networkx	blossom algorithm	Used for max weight matching of users based on similarity

standardize ratings to reduce user-bias (optimist vs. pessimist).
choose pearson over cosine since it only considers values rated by both users.
kendalltau(-b) over spearman since it 'better' handles ties in rankings.

normalize similarities [0, 1] to make them non-negative (make better weights for matching).

the blossom algorithm to find max weight matching in graph of users with their similarity as weight on the edges connecting possible pairs.

If an uneven number of students, the remaining student is added to the pair with a pair such that the total similarity is largest.

Try multiple lower-thresholds on similarity while adding edges to graph. Finding the highest lower-thresholds maximizes the minimum similarity between any pair in the matching.
